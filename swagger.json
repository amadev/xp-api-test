{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "core"
  },
  "host": "localhost:8080",
  "schemes": ["http"],
  "paths": {
    "/check_status": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bill/create": {
      "post": {
        "tags": [
          "bill"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "payer_currency",
                  "shop_amount",
                  "shop_currency",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "Test bill"
                  },
                  "lang": {
                    "type": "string",
                    "example": "ru"
                  },
                  "lifetime": {
                    "type": "integer",
                    "example": 30
                  },
                  "payer_account": {
                    "$ref": "#/components/schemas/account"
                  },
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created",
                    "id",
                    "lifetime",
                    "payer_account",
                    "payer_currency",
                    "payer_price",
                    "shop_amount",
                    "shop_currency",
                    "shop_id",
                    "shop_order_id",
                    "shop_refund",
                    "url"
                  ],
                  "properties": {
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "lifetime": {
                      "type": "integer",
                      "example": 30
                    },
                    "payer_account": {
                      "type": "integer",
                      "example": 1
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_order_id": {
                      "type": "string",
                      "example": "shop_order_1"
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bill/create/{source}": {
      "post": {
        "tags": [
          "bill"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "payer_currency",
                  "shop_amount",
                  "shop_currency",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "Test bill"
                  },
                  "lang": {
                    "type": "string",
                    "example": "ru"
                  },
                  "lifetime": {
                    "type": "integer",
                    "example": 30
                  },
                  "payer_account": {
                    "$ref": "#/components/schemas/account"
                  },
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "created",
                    "id",
                    "lifetime",
                    "payer_account",
                    "payer_currency",
                    "payer_price",
                    "shop_amount",
                    "shop_currency",
                    "shop_id",
                    "shop_order_id",
                    "shop_refund",
                    "url"
                  ],
                  "properties": {
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "lifetime": {
                      "type": "integer",
                      "example": 30
                    },
                    "payer_account": {
                      "type": "integer",
                      "example": 1
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_order_id": {
                      "type": "string",
                      "example": "shop_order_1"
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bill/try": {
      "post": {
        "tags": [
          "bill"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "payer_currency",
                  "shop_amount",
                  "shop_currency",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "exch_fee",
                    "info",
                    "manual",
                    "payer_currency",
                    "payer_fee",
                    "payer_price",
                    "paymethod_id",
                    "paymethod_name",
                    "warning"
                  ],
                  "properties": {
                    "exch_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "manual": {
                      "type": "object",
                      "example": {
                        "ru": "Инструкция",
                        "en": "Manual"
                      }
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "payer_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "paymethod_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "paymethod_name": {
                      "type": "string",
                      "example": "Test bill paymethod"
                    },
                    "warning": {
                      "type": "object",
                      "example": {
                        "ru": "Предупреждение",
                        "en": "Warning"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bill/try/{source}": {
      "post": {
        "tags": [
          "bill"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "payer_currency",
                  "shop_amount",
                  "shop_currency",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "exch_fee",
                    "info",
                    "manual",
                    "payer_currency",
                    "payer_fee",
                    "payer_price",
                    "paymethod_id",
                    "paymethod_name",
                    "warning"
                  ],
                  "properties": {
                    "exch_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "manual": {
                      "type": "object",
                      "example": {
                        "ru": "Инструкция",
                        "en": "Manual"
                      }
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "payer_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "paymethod_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "paymethod_name": {
                      "type": "string",
                      "example": "Test bill paymethod"
                    },
                    "warning": {
                      "type": "object",
                      "example": {
                        "ru": "Предупреждение",
                        "en": "Warning"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bill/pay": {
      "post": {
        "tags": [
          "bill"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "bill_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "bill_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "convert_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "success_url"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "success_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/success_url"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/bill/pay": {
      "post": {
        "tags": [
          "bill"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "bill_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "bill_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "convert_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "success_url"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "success_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/success_url"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bill/tie": {
      "post": {
        "tags": [
          "bill"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "bill_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "bill_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/{source}/bill/tie": {
      "post": {
        "tags": [
          "bill"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "bill_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "bill_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/bill/cancel": {
      "post": {
        "tags": [
          "bill"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "bill_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "bill_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "convert_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "failed_url"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "failed_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/failed_url"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/bill/cancel": {
      "post": {
        "tags": [
          "bill"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "bill_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "bill_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "convert_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "failed_url"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "failed_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/failed_url"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit_paymethods": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "currency",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "payways",
                      "rating",
                      "verify_required"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Test deposit paymethod"
                      },
                      "payways": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "add_ons_config",
                            "currency",
                            "hold_enabled",
                            "id",
                            "info_id",
                            "max_amount",
                            "min_amount",
                            "warning_id"
                          ],
                          "properties": {
                            "add_ons_config": {
                              "type": "object",
                              "example": {
                                "a": 1,
                                "b": 2
                              }
                            },
                            "currency": {
                              "type": "integer",
                              "example": 643
                            },
                            "hold_enabled": {
                              "type": "boolean",
                              "example": false
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "info_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "max_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 1001.42
                            },
                            "min_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 0.42
                            },
                            "warning_id": {
                              "type": "integer",
                              "example": 1
                            }
                          }
                        }
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      },
                      "verify_required": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/deposit_paymethods": {
      "post": {
        "tags": [
          "deposit"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "currency",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "payways",
                      "rating",
                      "verify_required"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Test deposit paymethod"
                      },
                      "payways": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "add_ons_config",
                            "currency",
                            "hold_enabled",
                            "id",
                            "info_id",
                            "max_amount",
                            "min_amount",
                            "warning_id"
                          ],
                          "properties": {
                            "add_ons_config": {
                              "type": "object",
                              "example": {
                                "a": 1,
                                "b": 2
                              }
                            },
                            "currency": {
                              "type": "integer",
                              "example": 643
                            },
                            "hold_enabled": {
                              "type": "boolean",
                              "example": false
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "info_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "max_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 1001.42
                            },
                            "min_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 0.42
                            },
                            "warning_id": {
                              "type": "integer",
                              "example": 1
                            }
                          }
                        }
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      },
                      "verify_required": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet_deposit_paymethods": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "payways",
                      "rating",
                      "verify_required"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Test deposit paymethod"
                      },
                      "payways": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "add_ons_config",
                            "currency",
                            "hold_enabled",
                            "id",
                            "info_id",
                            "max_amount",
                            "min_amount",
                            "warning_id"
                          ],
                          "properties": {
                            "add_ons_config": {
                              "type": "object",
                              "example": {
                                "a": 1,
                                "b": 2
                              }
                            },
                            "currency": {
                              "type": "integer",
                              "example": 643
                            },
                            "hold_enabled": {
                              "type": "boolean",
                              "example": false
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "info_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "max_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 1001.42
                            },
                            "min_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 0.42
                            },
                            "warning_id": {
                              "type": "integer",
                              "example": 1
                            }
                          }
                        }
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      },
                      "verify_required": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit_remainders": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "643": 1001.42
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/try": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "currency",
                  "payway",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_number",
                    "account_refund",
                    "add_ons_config",
                    "currency",
                    "email",
                    "info",
                    "manual",
                    "payer_currency",
                    "payer_fee",
                    "payer_price",
                    "real_exch_rate",
                    "warning"
                  ],
                  "properties": {
                    "account_number": {
                      "type": "integer",
                      "example": 201586579871
                    },
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "add_ons_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "test@example.com"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "manual": {
                      "type": "object",
                      "example": {
                        "ru": "Инструкция",
                        "en": "Manual"
                      }
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "payer_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "real_exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "warning": {
                      "type": "object",
                      "example": {
                        "ru": "Предупреждение",
                        "en": "Warning"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/deposit/try": {
      "post": {
        "tags": [
          "deposit"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "currency",
                  "payer_currency",
                  "paymethod_id",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "paymethod_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_number",
                    "account_refund",
                    "add_ons_config",
                    "currency",
                    "email",
                    "info",
                    "manual",
                    "payer_currency",
                    "payer_fee",
                    "payer_price",
                    "real_exch_rate",
                    "warning"
                  ],
                  "properties": {
                    "account_number": {
                      "type": "integer",
                      "example": 201586579871
                    },
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "add_ons_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "test@example.com"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "manual": {
                      "type": "object",
                      "example": {
                        "ru": "Инструкция",
                        "en": "Manual"
                      }
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "payer_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "real_exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "warning": {
                      "type": "object",
                      "example": {
                        "ru": "Предупреждение",
                        "en": "Warning"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/create": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "currency",
                  "failed_url",
                  "payway",
                  "sign",
                  "success_url"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "failed_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/failed_url"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "sign": {
                    "type": "string"
                  },
                  "success_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/success_url"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "id",
                    "method",
                    "url"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "method": {
                      "type": "string",
                      "example": "POST"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/deposit/create": {
      "post": {
        "tags": [
          "deposit"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "currency",
                  "failed_url",
                  "payer_currency",
                  "paymethod_id",
                  "sign",
                  "success_url"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "failed_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/failed_url"
                  },
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "paymethod_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "success_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/success_url"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "id",
                    "method",
                    "url"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "method": {
                      "type": "string",
                      "example": "POST"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "geller_invoice_id",
                  "invoice_id",
                  "partner_id",
                  "sign",
                  "status"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "extra_data": {
                    "type": "object",
                    "properties": {
                      "card_number": {
                        "type": "string",
                        "example": "5555555555554444"
                      },
                      "paysystem_payway_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  },
                  "geller_invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "invoice_id": {
                    "type": "string",
                    "example": "i_1"
                  },
                  "partner_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "paysystem_comission": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "paysystem_data": {
                    "type": "object",
                    "properties": {
                      "pay_token": {
                        "type": "string",
                        "example": "461a0e33da364eb2bd2ecc52f5ff0ea9"
                      }
                    }
                  },
                  "paysystem_invoice_id": {
                    "type": "string",
                    "example": "paysystem_invoice_1"
                  },
                  "paysystem_processed": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-11-18 12:10:43.456822"
                  },
                  "sign": {
                    "type": "string"
                  },
                  "status": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/shop_input_config": {
      "post": {
        "tags": [
          "shop"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "payways",
                      "rating"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Test shop paymethod"
                      },
                      "payways": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "add_ons_config",
                            "alias",
                            "currency",
                            "fee_config",
                            "fee_part_config",
                            "id",
                            "is_active",
                            "max_amount",
                            "min_amount"
                          ],
                          "properties": {
                            "add_ons_config": {
                              "type": "object",
                              "example": {
                                "a": 1,
                                "b": 2
                              }
                            },
                            "alias": {
                              "type": "string",
                              "example": "card_rub"
                            },
                            "currency": {
                              "type": "integer",
                              "example": 643
                            },
                            "fee_config": {
                              "type": "object",
                              "properties": {
                                "fix": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                },
                                "min": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 1.42
                                },
                                "percent": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                }
                              }
                            },
                            "fee_part_onfig": {
                              "type": "object",
                              "properties": {
                                "fix_part": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "percent_part": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 1.0
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "is_active": {
                              "type": "boolean",
                              "example": true
                            },
                            "max_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 1001.42
                            },
                            "min_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 0.42
                            }
                          }
                        }
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_input_config/{source}": {
      "post": {
        "tags": [
          "shop"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "payways",
                      "rating"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Test shop paymethod"
                      },
                      "payways": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "add_ons_config",
                            "alias",
                            "currency",
                            "fee_config",
                            "fee_part_config",
                            "id",
                            "is_active",
                            "max_amount",
                            "min_amount"
                          ],
                          "properties": {
                            "add_ons_config": {
                              "type": "object",
                              "example": {
                                "a": 1,
                                "b": 2
                              }
                            },
                            "alias": {
                              "type": "string",
                              "example": "card_rub"
                            },
                            "currency": {
                              "type": "integer",
                              "example": 643
                            },
                            "fee_config": {
                              "type": "object",
                              "properties": {
                                "fix": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                },
                                "min": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 1.42
                                },
                                "percent": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                }
                              }
                            },
                            "fee_part_onfig": {
                              "type": "object",
                              "properties": {
                                "fix_part": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "percent_part": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 1.0
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "is_active": {
                              "type": "boolean",
                              "example": true
                            },
                            "max_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 1001.42
                            },
                            "min_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 0.42
                            }
                          }
                        }
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_output_config": {
      "post": {
        "tags": [
          "shop"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "payways",
                      "rating"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Test shop paymethod"
                      },
                      "payways": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "account_info_config",
                            "alias",
                            "currency",
                            "fee_config",
                            "info_id",
                            "max_amount",
                            "min_amount"
                          ],
                          "properties": {
                            "account_info_config": {
                              "type": "object",
                              "example": {
                                "a": 1,
                                "b": 2
                              }
                            },
                            "alias": {
                              "type": "string",
                              "example": "card_rub"
                            },
                            "currency": {
                              "type": "integer",
                              "example": 643
                            },
                            "fee_config": {
                              "type": "object",
                              "properties": {
                                "fix": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                },
                                "min": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 1.42
                                },
                                "percent": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                }
                              }
                            },
                            "info_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "max_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 1001.42
                            },
                            "min_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 0.42
                            }
                          }
                        }
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_output_config/{source}": {
      "post": {
        "tags": [
          "shop"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "payways",
                      "rating"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Test shop paymethod"
                      },
                      "payways": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "account_info_config",
                            "alias",
                            "currency",
                            "fee_config",
                            "info_id",
                            "max_amount",
                            "min_amount"
                          ],
                          "properties": {
                            "account_info_config": {
                              "type": "object",
                              "example": {
                                "a": 1,
                                "b": 2
                              }
                            },
                            "alias": {
                              "type": "string",
                              "example": "card_rub"
                            },
                            "currency": {
                              "type": "integer",
                              "example": 643
                            },
                            "fee_config": {
                              "type": "object",
                              "properties": {
                                "fix": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                },
                                "min": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 1.42
                                },
                                "percent": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                }
                              }
                            },
                            "info_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "max_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 1001.42
                            },
                            "min_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 0.42
                            }
                          }
                        }
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfer/create": {
      "post": {
        "tags": [
          "transfer"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payee_account",
                  "payee_currency",
                  "shop_currency",
                  "shop_id",
                  "shop_payment_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "example": "Test transfer"
                  },
                  "payee_account": {
                    "$ref": "#/components/schemas/account"
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_payment_id": {
                    "type": "string",
                    "example": "shop_payment_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "balance",
                    "id",
                    "payee_account",
                    "payee_amount",
                    "payee_currency",
                    "shop",
                    "shop_currency",
                    "write_off_amount"
                  ],
                  "properties": {
                    "balance": {
                      "type": "number",
                      "format": "double",
                      "example": 1001.42
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payer_account": {
                      "type": "integer",
                      "example": 201586579871
                    },
                    "payee_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfer/create/{source}": {
      "post": {
        "tags": [
          "transfer"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payee_account",
                  "payee_currency",
                  "shop_currency",
                  "shop_id",
                  "shop_payment_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "example": "Test transfer"
                  },
                  "payee_account": {
                    "$ref": "#/components/schemas/account"
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_payment_id": {
                    "type": "string",
                    "example": "shop_payment_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "balance",
                    "id",
                    "payee_account",
                    "payee_amount",
                    "payee_currency",
                    "shop",
                    "shop_currency",
                    "write_off_amount"
                  ],
                  "properties": {
                    "balance": {
                      "type": "number",
                      "format": "double",
                      "example": 1001.42
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payer_account": {
                      "type": "integer",
                      "example": 201586579871
                    },
                    "payee_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfer/try": {
      "post": {
        "tags": [
          "transfer"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payee_currency",
                  "shop_currency",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_info_config",
                    "info",
                    "payee_amount",
                    "payee_currency",
                    "shop_currency",
                    "write_off_amount"
                  ],
                  "properties": {
                    "account_info_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "payee_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfer/try/{source}": {
      "post": {
        "tags": [
          "transfer"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payee_currency",
                  "shop_currency",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_info_config",
                    "info",
                    "payee_amount",
                    "payee_currency",
                    "shop_currency",
                    "write_off_amount"
                  ],
                  "properties": {
                    "account_info_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "payee_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/create": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "currency",
                  "payway",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "description": {
                    "type": "string",
                    "example": "Test invoice"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "id",
                    "method",
                    "url"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "method": {
                      "type": "string",
                      "example": "POST"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/create/{source}": {
      "post": {
        "tags": [
          "invoice"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "currency",
                  "payway",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "description": {
                    "type": "string",
                    "example": "Test invoice"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "id",
                    "method",
                    "url"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "method": {
                      "type": "string",
                      "example": "POST"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/try": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "currency",
                  "payway",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "description": {
                    "type": "string",
                    "example": "Test invoice"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "add_ons_config",
                    "exch_fee",
                    "info",
                    "manual",
                    "payer_fee",
                    "payer_price",
                    "paymethod_id",
                    "paymethod_name",
                    "ps_currency",
                    "warning"
                  ],
                  "properties": {
                    "add_ons_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "exch_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "manual": {
                      "type": "object",
                      "example": {
                        "ru": "Инструкция",
                        "en": "Manual"
                      }
                    },
                    "payer_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "payer_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "paymethod_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "paymethod_name": {
                      "type": "string",
                      "example": "Test invoice paymethod"
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "warning": {
                      "type": "object",
                      "example": {
                        "ru": "Предупреждение",
                        "en": "Warning"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/try/{source}": {
      "post": {
        "tags": [
          "invoice"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "currency",
                  "payway",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "description": {
                    "type": "string",
                    "example": "Test invoice"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "add_ons_config",
                    "exch_fee",
                    "info",
                    "manual",
                    "payer_fee",
                    "payer_price",
                    "paymethod_id",
                    "paymethod_name",
                    "ps_currency",
                    "warning"
                  ],
                  "properties": {
                    "add_ons_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "exch_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "manual": {
                      "type": "object",
                      "example": {
                        "ru": "Инструкция",
                        "en": "Manual"
                      }
                    },
                    "payer_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "payer_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "paymethod_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "paymethod_name": {
                      "type": "string",
                      "example": "Test invoice paymethod"
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "warning": {
                      "type": "object",
                      "example": {
                        "ru": "Предупреждение",
                        "en": "Warning"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/a4_create": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "currency",
                  "payway",
                  "project_id",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "description": {
                    "type": "string",
                    "example": "Test invoice"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "project_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "id",
                    "method",
                    "url"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "method": {
                      "type": "string",
                      "example": "POST"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/a4_hold": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "currency",
                  "payway",
                  "project_id",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "description": {
                    "type": "string",
                    "example": "Test invoice"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "project_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "id",
                    "method",
                    "url"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "method": {
                      "type": "string",
                      "example": "POST"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw/try": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payway",
                  "shop_currency",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "ps_amount",
                      "shop_amount"
                    ]
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_info_config",
                    "info",
                    "payee_receive",
                    "ps_currency",
                    "shop_currency",
                    "shop_write_off"
                  ],
                  "properties": {
                    "account_info_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw/try/{source}": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payway",
                  "shop_currency",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "ps_amount",
                      "shop_amount"
                    ]
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_info_config",
                    "info",
                    "payee_receive",
                    "ps_currency",
                    "shop_currency",
                    "shop_write_off"
                  ],
                  "properties": {
                    "account_info_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw/create": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account",
                  "amount",
                  "amount_type",
                  "payway",
                  "shop_currency",
                  "shop_id",
                  "shop_payment_id",
                  "sign"
                ],
                "properties": {
                  "_ptx_invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "account": {
                    "type": "string"
                  },
                  "account_details": {
                    "type": "object",
                    "example": {
                      "a": 1,
                      "b": 2
                    }
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "ps_amount",
                      "shop_amount"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "example": "Test withdraw"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_payment_id": {
                    "type": "string",
                    "example": "shop_payment_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "balance",
                    "id",
                    "payee_receive",
                    "ps_currency",
                    "shop_currency",
                    "shop_payment_id",
                    "shop_write_off",
                    "status"
                  ],
                  "properties": {
                    "balance": {
                      "type": "number",
                      "format": "double",
                      "example": 1001.42
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "rejected_reason": {
                      "type": "string",
                      "example": "Operation rejected"
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_payment_id": {
                      "type": "string",
                      "example": "shop_payment_1"
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw/create/{source}": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account",
                  "amount",
                  "amount_type",
                  "payway",
                  "shop_currency",
                  "shop_id",
                  "shop_payment_id",
                  "sign"
                ],
                "properties": {
                  "_ptx_invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "account": {
                    "type": "string"
                  },
                  "account_details": {
                    "type": "object",
                    "example": {
                      "a": 1,
                      "b": 2
                    }
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "ps_amount",
                      "shop_amount"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "example": "Test withdraw"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_payment_id": {
                    "type": "string",
                    "example": "shop_payment_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "balance",
                    "id",
                    "payee_receive",
                    "ps_currency",
                    "shop_currency",
                    "shop_payment_id",
                    "shop_write_off",
                    "status"
                  ],
                  "properties": {
                    "balance": {
                      "type": "number",
                      "format": "double",
                      "example": 1001.42
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "rejected_reason": {
                      "type": "string",
                      "example": "Operation rejected"
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_payment_id": {
                      "type": "string",
                      "example": "shop_payment_1"
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw/process": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "sign",
                  "withdraw_id"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "withdraw_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "payee_receive",
                    "ps_currency",
                    "shop_currency",
                    "shop_payment_id",
                    "shop_write_off",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_payment_id": {
                      "type": "string",
                      "example": "shop_payment_1"
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw/cancel": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "sign",
                  "withdraw_id"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  },
                  "withdraw_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "processed",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw/confirm": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "sign",
                  "withdraw_id"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  },
                  "withdraw_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "processed",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bill/notify/{source}": {
      "post": {
        "tags": [
          "bill"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "bill_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "bill_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "request",
                    "response"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Something went wrong"
                    },
                    "request": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "response": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/notify/{source}": {
      "post": {
        "tags": [
          "invoice"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "request",
                    "response"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Something went wrong"
                    },
                    "request": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "response": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw/status": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "sign",
                  "withdraw_id"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "withdraw_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "payee_receive",
                    "ps_currency",
                    "shop_currency",
                    "shop_payment_id",
                    "shop_write_off",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "rejected_reason": {
                      "type": "string",
                      "example": "Operation rejected"
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_payment_id": {
                      "type": "string",
                      "example": "shop_payment_1"
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw/shop_payment_status": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "shop_payment_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_payment_id": {
                    "type": "string",
                    "example": "shop_payment_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "payee_receive",
                    "ps_currency",
                    "shop_currency",
                    "shop_payment_id",
                    "shop_write_off",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "rejected_reason": {
                      "type": "string",
                      "example": "Operation rejected"
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_payment_id": {
                      "type": "string",
                      "example": "shop_payment_1"
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_balance": {
      "post": {
        "tags": [
          "shop"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "balances",
                    "shop_id"
                  ],
                  "properties": {
                    "balances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "available",
                          "currency",
                          "frozen",
                          "hold",
                          "rolling_reserve"
                        ],
                        "properties": {
                          "available": {
                            "type": "number",
                            "format": "double",
                            "example": 1001.42
                          },
                          "currency": {
                            "type": "integer",
                            "example": 643
                          },
                          "frozen": {
                            "type": "number",
                            "format": "double",
                            "example": 1.42
                          },
                          "hold": {
                            "type": "number",
                            "format": "double",
                            "example": 1.42
                          },
                          "rolling_reserve": {
                            "type": "number",
                            "format": "double",
                            "example": 1.42
                          }
                        }
                      }
                    },
                    "shop_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfer/shop_payment_status": {
      "post": {
        "tags": [
          "transfer"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "shop_payment_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_payment_id": {
                    "type": "string",
                    "example": "shop_payment_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "payee_currency",
                    "receive_amount",
                    "shop_currency",
                    "shop_payment_id",
                    "write_off_amount"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "receive_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_payment_id": {
                      "type": "string",
                      "example": "shop_payment_1"
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account_transfer/create": {
      "post": {
        "tags": [
          "account_transfer"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payee_account",
                  "payee_currency",
                  "payer_account_id",
                  "payer_currency",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "example": "Test transfer"
                  },
                  "payee_account": {
                    "$ref": "#/components/schemas/account"
                  },
                  "payee_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "payer_account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "balance",
                    "id",
                    "payee_account",
                    "payee_amount",
                    "payee_currency",
                    "payer_account",
                    "payer_currency",
                    "write_off_amount"
                  ],
                  "properties": {
                    "balance": {
                      "type": "number",
                      "format": "double",
                      "example": 1001.42
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_account": {
                      "type": "integer",
                      "example": 201586579871
                    },
                    "payee_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_account": {
                      "type": "integer",
                      "example": 1
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/account_transfer/create": {
      "post": {
        "tags": [
          "account_transfer"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payee_account",
                  "payee_currency",
                  "payer_account_id",
                  "payer_currency",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "example": "Test transfer"
                  },
                  "payee_account": {
                    "$ref": "#/components/schemas/account"
                  },
                  "payee_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "payer_account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "balance",
                    "id",
                    "payee_account",
                    "payee_amount",
                    "payee_currency",
                    "payer_account",
                    "payer_currency",
                    "write_off_amount"
                  ],
                  "properties": {
                    "balance": {
                      "type": "number",
                      "format": "double",
                      "example": 1001.42
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_account": {
                      "type": "integer",
                      "example": 201586579871
                    },
                    "payee_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_account": {
                      "type": "integer",
                      "example": 1
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account_transfer/try": {
      "post": {
        "tags": [
          "account_transfer"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payee_currency",
                  "payer_account_id",
                  "payer_currency",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "payee_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "payer_account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_info_config",
                    "fee",
                    "info",
                    "payee_amount",
                    "payee_currency",
                    "payer_currency",
                    "write_off_amount"
                  ],
                  "properties": {
                    "account_info_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "fee": {
                      "type": "object",
                      "properties": {
                        "fix": {
                          "type": "number",
                          "format": "double",
                          "example": 0.01
                        },
                        "max": {
                          "type": "number",
                          "format": "double",
                          "example": 1001.42
                        },
                        "min": {
                          "type": "number",
                          "format": "double",
                          "example": 1.42
                        },
                        "percent": {
                          "type": "number",
                          "format": "double",
                          "example": 0.01
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "payee_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/account_transfer/try": {
      "post": {
        "tags": [
          "account_transfer"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "payee_currency",
                  "payer_account_id",
                  "payer_currency",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "payee_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "payer_account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "payer_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_info_config",
                    "fee",
                    "info",
                    "payee_amount",
                    "payee_currency",
                    "payer_currency",
                    "write_off_amount"
                  ],
                  "properties": {
                    "account_info_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "fee": {
                      "type": "object",
                      "properties": {
                        "fix": {
                          "type": "number",
                          "format": "double",
                          "example": 0.01
                        },
                        "max": {
                          "type": "number",
                          "format": "double",
                          "example": 1001.42
                        },
                        "min": {
                          "type": "number",
                          "format": "double",
                          "example": 1.42
                        },
                        "percent": {
                          "type": "number",
                          "format": "double",
                          "example": 0.01
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "payee_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payer_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paygate_balance": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "paygate_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "balances",
                    "paygate_id"
                  ],
                  "properties": {
                    "balances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "balance_id",
                          "currency",
                          "ps_balance",
                          "total",
                          "updated"
                        ],
                        "properties": {
                          "balance_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "currency": {
                            "type": "integer",
                            "example": 643
                          },
                          "ps_balance": {
                            "type": "number",
                            "format": "double",
                            "example": 1001.42
                          },
                          "total": {
                            "type": "number",
                            "format": "double",
                            "example": 1001.42
                          },
                          "updated": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2021-11-18 12:10:43.456822"
                          }
                        }
                      }
                    },
                    "paygate_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_deposit/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_currency",
                  "account_id",
                  "account_refund",
                  "article_id",
                  "comment",
                  "paygate_id",
                  "ps_currency",
                  "ps_fee",
                  "ps_receive",
                  "sign"
                ],
                "properties": {
                  "account_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "account_refund": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system deposit"
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "ps_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_receive": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account",
                    "account_currency",
                    "account_refund",
                    "article",
                    "comment",
                    "exch_rate",
                    "paygate",
                    "profit",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive"
                  ],
                  "properties": {
                    "account": {
                      "type": "integer",
                      "example": 1
                    },
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system deposit"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_deposit/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_currency",
                  "account_id",
                  "account_refund",
                  "article_id",
                  "comment",
                  "id",
                  "paygate_id",
                  "ps_currency",
                  "ps_fee",
                  "ps_receive",
                  "sign"
                ],
                "properties": {
                  "account_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "account_refund": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system deposit"
                  },
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "ps_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_receive": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account",
                    "account_currency",
                    "account_refund",
                    "article",
                    "comment",
                    "exch_rate",
                    "paygate",
                    "profit",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive"
                  ],
                  "properties": {
                    "account": {
                      "type": "integer",
                      "example": 1
                    },
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system deposit"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_invoice/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comment",
                  "paygate_id",
                  "ps_currency",
                  "ps_fee",
                  "ps_receive",
                  "shop_currency",
                  "shop_id",
                  "shop_refund",
                  "sign"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system invoice"
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "ps_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_receive": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_refund": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "article",
                    "comment",
                    "exch_rate",
                    "paygate",
                    "profit",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive",
                    "shop",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system invoice"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_invoice/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comment",
                  "paygate_id",
                  "ps_currency",
                  "ps_fee",
                  "ps_receive",
                  "shop_currency",
                  "shop_id",
                  "shop_refund",
                  "sign"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system invoice"
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "ps_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_receive": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_refund": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "article",
                    "comment",
                    "exch_rate",
                    "id",
                    "paygate",
                    "profit",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive",
                    "shop",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system invoice"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_payout/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_currency",
                  "account_id",
                  "account_write_off",
                  "article_id",
                  "comment",
                  "paygate_id",
                  "ps_currency",
                  "ps_fee",
                  "ps_write_off",
                  "sign"
                ],
                "properties": {
                  "account_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "account_write_off": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system payout"
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "ps_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_write_off": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account",
                    "account_currency",
                    "account_refund",
                    "article",
                    "comment",
                    "exch_rate",
                    "paygate",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive"
                  ],
                  "properties": {
                    "account": {
                      "type": "integer",
                      "example": 1
                    },
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system payout"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_payout/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_currency",
                  "account_id",
                  "account_write_off",
                  "article_id",
                  "comment",
                  "paygate_id",
                  "ps_currency",
                  "ps_fee",
                  "ps_write_off",
                  "sign"
                ],
                "properties": {
                  "account_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "account_write_off": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system payout"
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "ps_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_write_off": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account",
                    "account_currency",
                    "account_refund",
                    "article",
                    "comment",
                    "exch_rate",
                    "id",
                    "paygate",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive"
                  ],
                  "properties": {
                    "account": {
                      "type": "integer",
                      "example": 1
                    },
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system payout"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_withdraw/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comment",
                  "paygate_id",
                  "ps_currency",
                  "ps_fee",
                  "ps_write_off",
                  "shop_currency",
                  "shop_id",
                  "shop_write_off",
                  "sign"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system withdraw"
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "ps_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_write_off": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_write_off": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "article",
                    "comment",
                    "exch_rate",
                    "paygate",
                    "profit",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive",
                    "shop",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system withdraw"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_withdraw/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comment",
                  "paygate_id",
                  "ps_currency",
                  "ps_fee",
                  "ps_write_off",
                  "shop_currency",
                  "shop_id",
                  "shop_write_off",
                  "sign"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system withdraw"
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "ps_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_write_off": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "shop_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_write_off": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "article",
                    "comment",
                    "exch_rate",
                    "id",
                    "paygate",
                    "profit",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive",
                    "shop",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system withdraw"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/register": {
      "post": {
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "birthday": {
                    "type": "string",
                    "pattern": "^[12]{1}[\\d]{3}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])$",
                    "example": "1983-02-13"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "test@example.com"
                  },
                  "lang": {
                    "type": "string",
                    "example": "ru"
                  },
                  "last_name": {
                    "type": "string",
                    "pattern": "^[а-яА-ЯёЁa-zA-Z]+$",
                    "example": "Doe"
                  },
                  "name": {
                    "type": "string",
                    "pattern": "^[а-яА-ЯёЁa-zA-Z]+$",
                    "example": "John"
                  },
                  "now": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+?[0-9]{6,16}$",
                    "example": "+18004444444"
                  },
                  "send_email": {
                    "type": "boolean",
                    "example": true
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_number",
                    "email"
                  ],
                  "properties": {
                    "account_number": {
                      "type": "integer",
                      "example": 201586579871
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "test@example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/confirm": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "ps_invoice_id",
                  "ps_processed",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_comission": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_data": {
                    "type": "object",
                    "example": {
                      "a": 1,
                      "b": 2
                    }
                  },
                  "ps_invoice_id": {
                    "type": "string",
                    "example": "ps_invoice_1"
                  },
                  "ps_processed": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-11-18 12:10:43.456822"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "processed",
                    "ps_data",
                    "ps_invoice_id",
                    "ps_processed",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "ps_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "ps_invoice_id": {
                      "type": "string",
                      "example": "ps_invoice_1"
                    },
                    "ps_processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/confirm": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deposit_id",
                  "ps_invoice_id",
                  "ps_processed",
                  "sign"
                ],
                "properties": {
                  "deposit_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_comission": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "ps_data": {
                    "type": "object",
                    "example": {
                      "a": 1,
                      "b": 2
                    }
                  },
                  "ps_invoice_id": {
                    "type": "string",
                    "example": "ps_invoice_1"
                  },
                  "ps_processed": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-11-18 12:10:43.456822"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "processed",
                    "ps_data",
                    "ps_invoice_id",
                    "ps_processed",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "ps_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "ps_invoice_id": {
                      "type": "string",
                      "example": "ps_invoice_1"
                    },
                    "ps_processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paygate_transfer/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article",
                  "comment",
                  "expected_received",
                  "receive_amount",
                  "sign",
                  "source_currency",
                  "source_fee",
                  "source_paygate",
                  "target_currency",
                  "target_fee",
                  "target_paygate",
                  "write_off_amount"
                ],
                "properties": {
                  "article": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test paygate transfer"
                  },
                  "expected_received": {
                    "type": "string",
                    "format": "date",
                    "example": "1983-02-13"
                  },
                  "receive_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "sign": {
                    "type": "string"
                  },
                  "source_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "source_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "source_paygate": {
                    "type": "integer",
                    "example": 1
                  },
                  "target_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "targer_fee": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "target_paygate": {
                    "type": "integer",
                    "example": 1
                  },
                  "write_off_amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paygate_transfer/complete": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "sign",
                  "transfer_id"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  },
                  "transfer_id": {
                    "type": "string",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_shop_transfer/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "article_id",
                  "comment",
                  "exch_fee_percent",
                  "sign",
                  "source_currency",
                  "source_shop_id",
                  "target_currency",
                  "target_shop_id"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system shop transfer"
                  },
                  "exch_fee_percent": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "sign": {
                    "type": "string"
                  },
                  "source_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "source_shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "target_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "target_shop_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "article_id",
                    "comment",
                    "exch_fee",
                    "exch_fee_percent",
                    "exch_rate",
                    "receive_amount",
                    "source_currency",
                    "source_shop_id",
                    "target_currency",
                    "target_shop_id",
                    "write_off_amount"
                  ],
                  "properties": {
                    "article_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system shop transfer"
                    },
                    "exch_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "exch_fee_percent": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "receive_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "source_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "source_shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "target_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "target_shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_shop_transfer/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "article_id",
                  "comment",
                  "exch_fee_percent",
                  "sign",
                  "source_currency",
                  "source_shop_id",
                  "target_currency",
                  "target_shop_id"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system shop transfer"
                  },
                  "exch_fee_percent": {
                    "type": "number",
                    "format": "double",
                    "example": 0.01
                  },
                  "sign": {
                    "type": "string"
                  },
                  "source_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "source_shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "target_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "target_shop_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "transfer_id"
                  ],
                  "properties": {
                    "transfer_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_shop_transfer/try/{source}": {
      "post": {
        "tags": [
          "system"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "article_id",
                  "comment",
                  "sign",
                  "source_currency",
                  "source_shop_id",
                  "target_currency",
                  "target_shop_id"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system shop transfer"
                  },
                  "sign": {
                    "type": "string"
                  },
                  "source_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "source_shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "target_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "target_shop_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "article_id",
                    "comment",
                    "exch_fee",
                    "exch_fee_percent",
                    "exch_rate",
                    "receive_amount",
                    "source_currency",
                    "source_shop_id",
                    "target_currency",
                    "target_shop_id",
                    "write_off_amount"
                  ],
                  "properties": {
                    "article_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system shop transfer"
                    },
                    "exch_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "exch_fee_percent": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "receive_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "source_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "source_shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "target_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "target_shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_shop_transfer/create/{source}": {
      "post": {
        "tags": [
          "system"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "amount_type",
                  "article_id",
                  "comment",
                  "sign",
                  "source_currency",
                  "source_shop_id",
                  "target_currency",
                  "target_shop_id"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test system shop transfer"
                  },
                  "sign": {
                    "type": "string"
                  },
                  "source_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "source_shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "target_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "target_shop_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "transfer_id"
                  ],
                  "properties": {
                    "transfer_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profit_fix/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "article_id",
                  "comment",
                  "currency",
                  "paygate_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test profit fix"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "calculation_date": {
                    "type": "string",
                    "example": "2022-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/costs_fix/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "article_id",
                  "comment",
                  "currency",
                  "paygate_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test costs fix"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "calculation_date": {
                    "type": "string",
                    "example": "2022-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profit_fix/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "profit_costs_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "profit_costs_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "amount",
                    "article",
                    "comment",
                    "currency",
                    "id",
                    "is_storno",
                    "paygate"
                  ],
                  "properties": {
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test profit fix"
                    },
                    "currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/costs_fix/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "profit_costs_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "profit_costs_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "amount",
                    "article",
                    "comment",
                    "currency",
                    "id",
                    "is_storno",
                    "paygate"
                  ],
                  "properties": {
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test costs fix"
                    },
                    "currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw_refund/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "op_type",
                  "sign",
                  "withdraw_id"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "withdraw_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "costs_refund",
                    "paygate",
                    "profit_refund",
                    "ps_currency",
                    "ps_refund",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "costs_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "paygate": {
                      "type": "object",
                      "required": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Test withdraw refund paygate"
                        }
                      }
                    },
                    "profit_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdraw_refund/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comments",
                  "now",
                  "op_type",
                  "sign",
                  "withdraw_id"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test withdraw refund"
                  },
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "withdraw_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfer_refund/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "op_type",
                  "sign",
                  "transfer_id"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "transfer_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "payee_currency",
                    "payee_refund",
                    "profit_refund",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "payee_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "payee_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "profit_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfer_refund/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comments",
                  "now",
                  "op_type",
                  "sign",
                  "transfer_id"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test transfer refund"
                  },
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "transfer_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_deposit/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deposit_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "deposit_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account",
                    "account_currency",
                    "account_refund",
                    "article",
                    "comment",
                    "exch_rate",
                    "id",
                    "is_storno",
                    "paygate",
                    "profit",
                    "processing",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive"
                  ],
                  "properties": {
                    "account": {
                      "type": "integer",
                      "example": 1
                    },
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system deposit"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "processing": {
                      "type": "boolean",
                      "example": false
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_invoice/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "article",
                    "comment",
                    "exch_rate",
                    "id",
                    "is_storno",
                    "paygate",
                    "profit",
                    "processing",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive",
                    "shop",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system invoice"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "processing": {
                      "type": "boolean",
                      "example": false
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_payout/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "payout_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "payout_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account",
                    "account_currency",
                    "account_write_iff",
                    "article",
                    "comment",
                    "exch_rate",
                    "id",
                    "is_storno",
                    "paygate",
                    "profit",
                    "processing",
                    "ps_currency",
                    "ps_fee",
                    "ps_write_off"
                  ],
                  "properties": {
                    "account": {
                      "type": "integer",
                      "example": 1
                    },
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system payout"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "processing": {
                      "type": "boolean",
                      "example": false
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_withdraw/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "sign",
                  "withdraw_id"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  },
                  "withdraw_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "article",
                    "comment",
                    "exch_rate",
                    "id",
                    "is_storno",
                    "paygate",
                    "profit",
                    "processing",
                    "ps_currency",
                    "ps_fee",
                    "ps_receive",
                    "shop",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system withdraw"
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    },
                    "paygate": {
                      "type": "integer",
                      "example": 1
                    },
                    "profit": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "processing": {
                      "type": "boolean",
                      "example": false
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "ps_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system_shop_transfer/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_transfer_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_transfer_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "article",
                    "comment",
                    "exch_fee",
                    "exch_fee_percent",
                    "exch_rate",
                    "id",
                    "is_storno",
                    "processing",
                    "receive_amount",
                    "source_currency",
                    "source_shop",
                    "target_currency",
                    "target_shop",
                    "write_off_amount"
                  ],
                  "properties": {
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test system shop transfer"
                    },
                    "exch_fee": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "exch_fee_percent": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "exch_rate": {
                      "type": "number",
                      "format": "double",
                      "example": 1.0
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    },
                    "processing": {
                      "type": "boolean",
                      "example": false
                    },
                    "receive_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "source_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "source_shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "target_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "target_shop": {
                      "type": "integer",
                      "example": 1
                    },
                    "write_off_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice_refund/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comments",
                  "invoice_id",
                  "now",
                  "op_type",
                  "sign"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test invoice refund"
                  },
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/invoice_refund/create": {
      "post": {
        "tags": [
          "system"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comments",
                  "invoice_id",
                  "now",
                  "op_type",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test invoice refund"
                  },
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice_refund/reject": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/invoice_refund/confirm": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/invoice_refund/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "op_type",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "costs_refund",
                    "paygate",
                    "profit_refund",
                    "ps_currency",
                    "ps_refund",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "costs_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "paygate": {
                      "type": "object",
                      "required": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Test invoice refund paygate"
                        }
                      }
                    },
                    "profit_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/invoice_refund/try": {
      "post": {
        "tags": [
          "system"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "op_type",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "costs_refund",
                    "paygate",
                    "profit_refund",
                    "ps_currency",
                    "ps_refund",
                    "shop_currency",
                    "shop_refund"
                  ],
                  "properties": {
                    "costs_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "paygate": {
                      "type": "object",
                      "required": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Test invoice refund paygate"
                        }
                      }
                    },
                    "profit_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout_refund/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "op_type",
                  "payout_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "payout_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_currency",
                    "account_refund",
                    "costs_refund",
                    "paygate",
                    "profit_refund",
                    "ps_currency",
                    "ps_refund"
                  ],
                  "properties": {
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "costs_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "paygate": {
                      "type": "object",
                      "required": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Test payout refund paygate"
                        }
                      }
                    },
                    "profit_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout_refund/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comments",
                  "now",
                  "op_type",
                  "payout_id",
                  "sign"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test payout refund"
                  },
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "payout_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_trust/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "article_id",
                  "comments",
                  "currency",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test shop trust"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "shop_trust_id"
                  ],
                  "properties": {
                    "shop_trust_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_return/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "article_id",
                  "comments",
                  "currency",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test shop trust"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "shop_return_id"
                  ],
                  "properties": {
                    "shop_return_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/verify_shop": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "currency",
                  "shop_id",
                  "shop_order_id",
                  "shop_sign",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "shop_sign": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "check_unique_order_id",
                    "id",
                    "name"
                  ],
                  "properties": {
                    "check_unique_order_id": {
                      "type": "boolean",
                      "example": true
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Test shop"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currency_rates": {
      "post": {
        "tags": [
          "shop"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "from_currency",
                      "rate",
                      "to_currency"
                    ],
                    "properties": {
                      "from_currency": {
                        "type": "integer",
                        "example": 643
                      },
                      "rate": {
                        "type": "number",
                        "format": "double",
                        "example": 1.0
                      },
                      "to_currency": {
                        "type": "integer",
                        "example": 643
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check_account": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account",
                  "amount",
                  "payway",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "account": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_info",
                    "error",
                    "provider_status",
                    "result"
                  ],
                  "properties": {
                    "account_details": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "account_info": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "error": {
                      "type": "string",
                      "example": "Something went wrong"
                    },
                    "provider_status": {
                      "type": "integer",
                      "example": 1
                    },
                    "result": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/check_account/{source}": {
      "post": {
        "tags": [
          "withdraw"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account",
                  "amount",
                  "payway",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "account": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_info",
                    "error",
                    "provider_status",
                    "result"
                  ],
                  "properties": {
                    "account_details": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "account_info": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "error": {
                      "type": "string",
                      "example": "Something went wrong"
                    },
                    "provider_status": {
                      "type": "integer",
                      "example": 1
                    },
                    "result": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/update": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "client_price",
                    "created",
                    "description",
                    "extra_data",
                    "invoice_id",
                    "payway",
                    "processed",
                    "ps_currency",
                    "ps_data",
                    "shop_amount",
                    "shop_currency",
                    "shop_id",
                    "shop_invoice_id",
                    "shop_refund",
                    "status"
                  ],
                  "properties": {
                    "client_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "description": {
                      "type": "string",
                      "example": "Test invoice"
                    },
                    "extra_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "invoice_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payway": {
                      "type": "string",
                      "example": "card_rub"
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "shop_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_invoice_id": {
                      "type": "string",
                      "example": "shop_invoice_1"
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/update/{source}": {
      "post": {
        "tags": [
          "invoice"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "client_price",
                    "created",
                    "description",
                    "extra_data",
                    "invoice_id",
                    "payway",
                    "processed",
                    "ps_currency",
                    "ps_data",
                    "shop_amount",
                    "shop_currency",
                    "shop_id",
                    "shop_invoice_id",
                    "shop_refund",
                    "status"
                  ],
                  "properties": {
                    "client_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "description": {
                      "type": "string",
                      "example": "Test invoice"
                    },
                    "extra_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "invoice_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payway": {
                      "type": "string",
                      "example": "card_rub"
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "shop_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_invoice_id": {
                      "type": "string",
                      "example": "shop_invoice_1"
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/update": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deposit_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "deposit_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_balance_profit_fix/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "article_id",
                  "comment",
                  "currency",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test shop balance profit fix"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "calculation_date": {
                    "type": "string",
                    "example": "2022-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_balance_costs_fix/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "article_id",
                  "comment",
                  "currency",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test shop balance costs fix"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "calculation_date": {
                    "type": "string",
                    "example": "2022-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_balance_profit_fix/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_profit_costs_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_profit_costs_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "amount",
                    "article",
                    "comment",
                    "currency",
                    "id",
                    "is_storno",
                    "shop"
                  ],
                  "properties": {
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test shop balance profit fix"
                    },
                    "currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop_balance_costs_fix/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_profit_costs_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_profit_costs_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "amount",
                    "article",
                    "comment",
                    "currency",
                    "id",
                    "is_storno",
                    "shop"
                  ],
                  "properties": {
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test shop balance costs fix"
                    },
                    "currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    },
                    "shop": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account_balance_profit_fix/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "article_id",
                  "comment",
                  "currency",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test account balance profit fix"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "sign": {
                    "type": "string"
                  },
                  "calculation_date": {
                    "type": "string",
                    "example": "2022-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account_balance_costs_fix/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "article_id",
                  "comment",
                  "currency",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comment": {
                    "type": "string",
                    "example": "Test account balance costs fix"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "sign": {
                    "type": "string"
                  },
                  "calculation_date": {
                    "type": "string",
                    "example": "2022-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account_balance_profit_fix/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_profit_costs_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_profit_costs_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account",
                    "amount",
                    "article",
                    "comment",
                    "currency",
                    "id",
                    "is_storno"
                  ],
                  "properties": {
                    "account": {
                      "type": "integer",
                      "example": 1
                    },
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test account balance profit fix"
                    },
                    "currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account_balance_costs_fix/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_profit_costs_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_profit_costs_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account",
                    "amount",
                    "article",
                    "comment",
                    "currency",
                    "id",
                    "is_storno"
                  ],
                  "properties": {
                    "account": {
                      "type": "integer",
                      "example": 1
                    },
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "article": {
                      "type": "integer",
                      "example": 1
                    },
                    "comment": {
                      "type": "string",
                      "example": "Test account balance costs fix"
                    },
                    "currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "is_storno": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/try": {
      "post": {
        "tags": [
          "payout"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_currency",
                  "account_id",
                  "amount",
                  "amount_type",
                  "currency",
                  "paymethod_id",
                  "sign"
                ],
                "properties": {
                  "account_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "paymethod_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_currency",
                    "account_info_config",
                    "account_write_off",
                    "info",
                    "payee_receive",
                    "ps_currency"
                  ],
                  "properties": {
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_info_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "account_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/payout/try": {
      "post": {
        "tags": [
          "payout"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_currency",
                  "account_id",
                  "amount",
                  "amount_type",
                  "currency",
                  "paymethod_id",
                  "sign"
                ],
                "properties": {
                  "account_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "paymethod_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_currency",
                    "account_info_config",
                    "account_write_off",
                    "info",
                    "payee_receive",
                    "ps_currency"
                  ],
                  "properties": {
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_info_config": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "account_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "ru": "Информация",
                        "en": "Information"
                      }
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/create": {
      "post": {
        "tags": [
          "payout"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account",
                  "account_currency",
                  "account_id",
                  "amount",
                  "amount_type",
                  "currency",
                  "paymethod_id",
                  "sign"
                ],
                "properties": {
                  "account": {
                    "type": "string"
                  },
                  "account_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "account_details": {
                    "type": "object",
                    "example": {
                      "a": 1,
                      "b": 2
                    }
                  },
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "description": {
                    "type": "string",
                    "example": "Test payout"
                  },
                  "paymethod_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_currency",
                    "account_write_off",
                    "balance",
                    "id",
                    "payee_receive",
                    "ps_currency",
                    "status"
                  ],
                  "properties": {
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "balance": {
                      "type": "number",
                      "format": "double",
                      "example": 1001.42
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "rejected_reason": {
                      "type": "string",
                      "example": "Operation rejected"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/payout/create": {
      "post": {
        "tags": [
          "payout"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account",
                  "account_currency",
                  "account_id",
                  "amount",
                  "amount_type",
                  "currency",
                  "paymethod_id",
                  "sign"
                ],
                "properties": {
                  "account": {
                    "type": "string"
                  },
                  "account_currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "account_details": {
                    "type": "object",
                    "example": {
                      "a": 1,
                      "b": 2
                    }
                  },
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "amount_type": {
                    "type": "string",
                    "enum": [
                      "receive_amount",
                      "writeoff_amount"
                    ]
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "description": {
                    "type": "string",
                    "example": "Test payout"
                  },
                  "paymethod_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_currency",
                    "account_write_off",
                    "balance",
                    "id",
                    "payee_receive",
                    "ps_currency",
                    "status"
                  ],
                  "properties": {
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "balance": {
                      "type": "number",
                      "format": "double",
                      "example": 1001.42
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "rejected_reason": {
                      "type": "string",
                      "example": "Operation rejected"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account_output_config": {
      "post": {
        "tags": [
          "account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "is_transfer_config",
                      "name",
                      "payways",
                      "rating"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "is_transfer_config": {
                        "type": "boolean",
                        "example": false
                      },
                      "name": {
                        "type": "string",
                        "example": "Test account paymethod"
                      },
                      "payways": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "account_info_config",
                            "currency",
                            "fee_config",
                            "id",
                            "info_id",
                            "max_amount",
                            "min_amount"
                          ],
                          "properties": {
                            "account_info_config": {
                              "type": "object",
                              "example": {
                                "a": 1,
                                "b": 2
                              }
                            },
                            "currency": {
                              "type": "integer",
                              "example": 643
                            },
                            "fee_config": {
                              "type": "object",
                              "properties": {
                                "fix": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                },
                                "min": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 1.42
                                },
                                "percent": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "info_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "max_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 1001.42
                            },
                            "min_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 0.42
                            }
                          }
                        }
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/account_output_config": {
      "post": {
        "tags": [
          "account"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "is_transfer_config",
                      "name",
                      "payways",
                      "rating"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "is_transfer_config": {
                        "type": "boolean",
                        "example": false
                      },
                      "name": {
                        "type": "string",
                        "example": "Test account paymethod"
                      },
                      "payways": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "account_info_config",
                            "currency",
                            "fee_config",
                            "id",
                            "info_id",
                            "max_amount",
                            "min_amount"
                          ],
                          "properties": {
                            "account_info_config": {
                              "type": "object",
                              "example": {
                                "a": 1,
                                "b": 2
                              }
                            },
                            "currency": {
                              "type": "integer",
                              "example": 643
                            },
                            "fee_config": {
                              "type": "object",
                              "properties": {
                                "fix": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                },
                                "min": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 1.42
                                },
                                "percent": {
                                  "type": "number",
                                  "format": "double",
                                  "example": 0.01
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "info_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "max_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 1001.42
                            },
                            "min_amount": {
                              "type": "number",
                              "format": "double",
                              "example": 0.42
                            }
                          }
                        }
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/process": {
      "post": {
        "tags": [
          "payout"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "payout_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "payout_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_currency",
                    "account_write_off",
                    "id",
                    "payee_receive",
                    "ps_currency",
                    "status"
                  ],
                  "properties": {
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_write_off": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payee_receive": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/charge": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "client_price",
                    "created",
                    "description",
                    "payment_id",
                    "payway",
                    "processed",
                    "ps_currency",
                    "ps_data",
                    "shop_amount",
                    "shop_currency",
                    "shop_id",
                    "shop_invoice_id",
                    "shop_refund",
                    "status"
                  ],
                  "properties": {
                    "client_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "description": {
                      "type": "string",
                      "example": "Test invoice"
                    },
                    "payment_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payway": {
                      "type": "string",
                      "example": "card_rub"
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "shop_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_invoice_id": {
                      "type": "string",
                      "example": "shop_invoice_1"
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/unhold": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "client_price",
                    "created",
                    "description",
                    "payment_id",
                    "payway",
                    "processed",
                    "ps_currency",
                    "ps_data",
                    "shop_amount",
                    "shop_currency",
                    "shop_id",
                    "shop_invoice_id",
                    "shop_refund",
                    "status"
                  ],
                  "properties": {
                    "client_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "description": {
                      "type": "string",
                      "example": "Test invoice"
                    },
                    "payment_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payway": {
                      "type": "string",
                      "example": "card_rub"
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "shop_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_invoice_id": {
                      "type": "string",
                      "example": "shop_invoice_1"
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/hold": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "currency",
                  "payway",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "description": {
                    "type": "string",
                    "example": "Test invoice"
                  },
                  "payway": {
                    "$ref": "#/components/schemas/payway"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "id",
                    "method",
                    "url"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "method": {
                      "type": "string",
                      "example": "POST"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/check": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "client_price",
                    "created",
                    "description",
                    "is_unique",
                    "payment_id",
                    "payway",
                    "processed",
                    "ps_currency",
                    "ps_data",
                    "shop_amount",
                    "shop_currency",
                    "shop_id",
                    "shop_order_id",
                    "shop_refund",
                    "status",
                    "updated"
                  ],
                  "properties": {
                    "client_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "description": {
                      "type": "string",
                      "example": "Test invoice"
                    },
                    "is_unique": {
                      "type": "boolean",
                      "example": true
                    },
                    "payment_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payway": {
                      "type": "string",
                      "example": "card_rub"
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "shop_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_order_id": {
                      "type": "string",
                      "example": "shop_order_1"
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bill/convert": {
      "post": {
        "tags": [
          "bill"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "bill_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "bill_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "643": 1.42
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/bill/convert": {
      "post": {
        "tags": [
          "bill"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "bill_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "bill_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "643": 1.42
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/release": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deposit_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "deposit_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status",
                    "updated"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/hold/cancel": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deposit_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "deposit_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/unhold": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deposit_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "deposit_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/charge": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deposit_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "deposit_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paygate_transfer/storno": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "sign",
                  "transfer_id"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  },
                  "transfer_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/verify": {
      "post": {
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account",
                  "now",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "account": {
                    "$ref": "#/components/schemas/account"
                  },
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_number",
                    "email",
                    "status"
                  ],
                  "properties": {
                    "account_number": {
                      "type": "integer",
                      "example": 201586579871
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "test@example.com"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit_refund/try": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deposit_id",
                  "now",
                  "op_type",
                  "sign"
                ],
                "properties": {
                  "deposit_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_currency",
                    "account_refund",
                    "costs_refund",
                    "paygate",
                    "profit_refund",
                    "ps_currency",
                    "ps_refund"
                  ],
                  "properties": {
                    "account_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "costs_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "paygate": {
                      "type": "object",
                      "required": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Test deposit refund paygate"
                        }
                      }
                    },
                    "profit_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit_refund/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "article_id",
                  "comments",
                  "deposit_id",
                  "now",
                  "op_type",
                  "sign"
                ],
                "properties": {
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test deposit refund"
                  },
                  "deposit_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "op_type": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paygate_trust/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "article_id",
                  "comments",
                  "currency",
                  "paygate_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test shop trust"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "paygate_trust_id"
                  ],
                  "properties": {
                    "paygate_trust_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paygate_return/create": {
      "post": {
        "tags": [
          "system"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "article_id",
                  "comments",
                  "currency",
                  "paygate_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "article_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "comments": {
                    "type": "string",
                    "example": "Test shop trust"
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "paygate_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "paygate_return_id"
                  ],
                  "properties": {
                    "paygate_return_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/capture": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "processed",
                    "status",
                    "updated"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/release": {
      "post": {
        "tags": [
          "invoice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoice_id",
                  "now",
                  "sign"
                ],
                "properties": {
                  "invoice_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "now": {
                    "type": "string"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "processed",
                    "status",
                    "updated"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/try/skypull": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "currency",
                  "payway_id",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "payway": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_number",
                    "account_refund",
                    "email"
                  ],
                  "properties": {
                    "account_number": {
                      "type": "integer",
                      "example": 201586579871
                    },
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "test@example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/create/skypull": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "currency",
                  "payway_id",
                  "ps_txn_id",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "payway": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_payer_account": {
                    "type": "string"
                  },
                  "ps_txn_id": {
                    "type": "string",
                    "example": "ps_txn_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_refund",
                    "deposit_id"
                  ],
                  "properties": {
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "deposit_id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/pay/skypull": {
      "post": {
        "tags": [
          "deposit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account_id",
                  "amount",
                  "currency",
                  "payway_id",
                  "ps_txn_date",
                  "ps_txn_id",
                  "sign"
                ],
                "properties": {
                  "account_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "payway": {
                    "type": "integer",
                    "example": 1
                  },
                  "ps_txn_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-11-18 12:10:43.456822"
                  },
                  "ps_txn_id": {
                    "type": "string",
                    "example": "ps_txn_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "account_refund",
                    "deposit_id",
                    "processed"
                  ],
                  "properties": {
                    "account_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "deposit_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/operations": {
      "post": {
        "tags": [
          "operations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "end_date",
                  "operation_type",
                  "shop_id",
                  "sign",
                  "start_date"
                ],
                "properties": {
                  "end_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-11-18 12:10:43.456822"
                  },
                  "operation_type": {
                    "type": "string",
                    "enum": [
                      "invoice",
                      "withdraw"
                    ]
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-11-18 12:10:43.456822"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "account",
                      "amount",
                      "create_date",
                      "currency",
                      "description",
                      "fee",
                      "operation_id",
                      "operation_number",
                      "operation_type",
                      "processed_date",
                      "shop_amount",
                      "shop_currency",
                      "shop_id",
                      "status"
                    ],
                    "properties": {
                      "account": {
                        "type": "integer",
                        "example": 201586579871
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 1.42
                      },
                      "create_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-11-18 12:10:43.456822"
                      },
                      "currency": {
                        "type": "integer",
                        "example": 643
                      },
                      "description": {
                        "type": "string",
                        "example": "Test operation"
                      },
                      "fee": {
                        "type": "number",
                        "format": "double",
                        "example": 0.01
                      },
                      "operation_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "operation_number": {
                        "type": "string",
                        "example": "shop_operation_1"
                      },
                      "operation_type": {
                        "type": "string",
                        "enum": [
                          "invoice",
                          "withdraw"
                        ]
                      },
                      "processed_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-11-18 12:10:43.456822"
                      },
                      "shop_amount": {
                        "type": "number",
                        "format": "double",
                        "example": 1.42
                      },
                      "shop_currency": {
                        "type": "integer",
                        "example": 643
                      },
                      "shop_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "status": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paymethods/default_payways": {
      "post": {
        "tags": [
          "shop"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "currency",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "example": 1.42
                  },
                  "currency": {
                    "type": "integer",
                    "example": 643
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "payer_price",
                      "paymethod_id",
                      "paymethod_name",
                      "payway_alias",
                      "payway_currency",
                      "rating"
                    ],
                    "properties": {
                      "payer_price": {
                        "type": "number",
                        "format": "double",
                        "example": 1.42
                      },
                      "paymethod_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "paymethod_name": {
                        "type": "string",
                        "example": "Test shop paymethod"
                      },
                      "payway_alias": {
                        "type": "string",
                        "example": "card_rub"
                      },
                      "payway_currency": {
                        "type": "integer",
                        "example": 643
                      },
                      "rating": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paymethods/payways": {
      "post": {
        "tags": [
          "shop"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "paymethod_id",
                  "shop_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "paymethod_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "payway_alias",
                      "payway_currency",
                      "payway_id"
                    ],
                    "properties": {
                      "payway_alias": {
                        "type": "string",
                        "example": "card_rub"
                      },
                      "payway_currency": {
                        "type": "integer",
                        "example": 643
                      },
                      "payway_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bill/shop_order_status": {
      "post": {
        "tags": [
          "bill"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "now",
                  "shop_id",
                  "shop_order_id",
                  "sign"
                ],
                "properties": {
                  "now": {
                    "type": "string"
                  },
                  "shop_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "shop_order_id": {
                    "type": "string",
                    "example": "shop_order_1"
                  },
                  "sign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "client_price",
                    "created",
                    "description",
                    "is_unique",
                    "payment_id",
                    "payway",
                    "processed",
                    "ps_currency",
                    "ps_data",
                    "shop_amount",
                    "shop_currency",
                    "shop_id",
                    "shop_order_id",
                    "shop_refund",
                    "status"
                  ],
                  "properties": {
                    "client_price": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "description": {
                      "type": "string",
                      "example": "Test bill"
                    },
                    "is_unique": {
                      "type": "boolean",
                      "example": true
                    },
                    "payment_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "payway": {
                      "type": "string",
                      "example": "card_rub"
                    },
                    "processed": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-18 12:10:43.456822"
                    },
                    "ps_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "ps_data": {
                      "type": "object",
                      "example": {
                        "a": 1,
                        "b": 2
                      }
                    },
                    "shop_amount": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "shop_currency": {
                      "type": "integer",
                      "example": 643
                    },
                    "shop_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "shop_order_id": {
                      "type": "string",
                      "example": "shop_order_1"
                    },
                    "shop_refund": {
                      "type": "number",
                      "format": "double",
                      "example": 1.42
                    },
                    "status": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "account": {
        "oneOf": [
          {
            "type": "integer",
            "example": 201586579871
          }
        ]
      },
      "payway": {
        "oneOf": [
          {
            "type": "integer",
            "example": 1
          }
        ]
      }
    }
  }
}
